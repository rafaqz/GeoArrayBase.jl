import{_ as a,c as i,ai as n,o as e}from"./chunks/framework.CS7uZ9fp.js";const p="/Rasters.jl/dev/assets/klidpmj.BQJQx8jK.png",l="/Rasters.jl/dev/assets/sgmilkz.DVebwO7P.png",E=JSON.parse('{"title":"Species distribution modelling workflow","description":"","frontmatter":{},"headers":[],"relativePath":"tutorials/gbif_wflow.md","filePath":"tutorials/gbif_wflow.md","lastUpdated":null}'),t={name:"tutorials/gbif_wflow.md"};function h(o,s,r,k,d,c){return e(),i("div",null,s[0]||(s[0]=[n(`<h1 id="Species-distribution-modelling-workflow" tabindex="-1">Species distribution modelling workflow <a class="header-anchor" href="#Species-distribution-modelling-workflow" aria-label="Permalink to &quot;Species distribution modelling workflow {#Species-distribution-modelling-workflow}&quot;">​</a></h1><p>This example shows a full Species distribution modelling workflow, from loading data, to cleaning it, to fitting an ensemble and generating predictions.</p><p>It uses GBIF and WorldClim data, which are common datasets in ecology. We&#39;ll load occurrences for the Mountain Pygmy Possum species using <a href="https://github.com/rafaqz/GBIF2.jl" target="_blank" rel="noreferrer">GBIF2.jl</a>, an interface to the <a href="https://www.gbif.org/" target="_blank" rel="noreferrer">Global Biodiversity Information Facility</a>, and extract environmental variables using BioClim data from <a href="https://github.com/EcoJulia/RasterDataSources.jl" target="_blank" rel="noreferrer">RasterDataSources.jl</a>.</p><h2 id="Load-Rasters,-ArchGDAL,-RasterDataSources-and-GBIF" tabindex="-1">Load Rasters, ArchGDAL, RasterDataSources and GBIF <a class="header-anchor" href="#Load-Rasters,-ArchGDAL,-RasterDataSources-and-GBIF" aria-label="Permalink to &quot;Load Rasters, ArchGDAL, RasterDataSources and GBIF {#Load-Rasters,-ArchGDAL,-RasterDataSources-and-GBIF}&quot;">​</a></h2><p>The GBIF2 library is used to download occurrence data, RasterDataSources to conveniently access Bioclim data. ArchGDAL is necessary to load in the Bioclim data.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Rasters, GBIF2</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> RasterDataSources, ArchGDAL</span></span></code></pre></div><p>Load occurrences for the Mountain Pygmy Possum using GBIF.jl</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">records </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GBIF2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">occurrence_search</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Burramys parvus&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; limit</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">300</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>300-element GBIF2.Table{GBIF2.Occurrence, JSON3.Array{JSON3.Object, Vector{UInt8}, SubArray{UInt64, 1, Vector{UInt64}, Tuple{UnitRange{Int64}}, true}}}┌──────────────────────────┬─────────┬─────────┬─────────┬──────────┬───────────</span></span>
<span class="line"><span>│                 geometry │    year │   month │     day │  kingdom │   phylum ⋯</span></span>
<span class="line"><span>│ Tuple{Float64, Float64}? │  Int64? │  Int64? │  Int64? │  String? │  String? ⋯</span></span>
<span class="line"><span>├──────────────────────────┼─────────┼─────────┼─────────┼──────────┼───────────</span></span>
<span class="line"><span>│                  missing │    2021 │       1 │       6 │ Animalia │ Chordata ⋯</span></span>
<span class="line"><span>│      (148.333, -36.4333) │    2011 │      11 │      21 │ Animalia │ Chordata ⋯</span></span>
<span class="line"><span>│      (148.391, -36.3036) │    2015 │      11 │      15 │ Animalia │ Chordata ⋯</span></span>
<span class="line"><span>│      (148.396, -36.3818) │    2016 │      11 │      15 │ Animalia │ Chordata ⋯</span></span>
<span class="line"><span>│                  missing │ missing │ missing │ missing │ Animalia │ Chordata ⋯</span></span>
<span class="line"><span>│      (148.347, -36.5047) │    2012 │      11 │      22 │ Animalia │ Chordata ⋯</span></span>
<span class="line"><span>│                  missing │ missing │ missing │ missing │ Animalia │ Chordata ⋯</span></span>
<span class="line"><span>│                  missing │ missing │ missing │ missing │ Animalia │ Chordata ⋯</span></span>
<span class="line"><span>│                  missing │ missing │ missing │ missing │ Animalia │ Chordata ⋯</span></span>
<span class="line"><span>│      (148.329, -36.4317) │    2016 │       1 │       3 │ Animalia │ Chordata ⋯</span></span>
<span class="line"><span>│      (147.096, -36.9357) │    2020 │       2 │      10 │ Animalia │ Chordata ⋯</span></span>
<span class="line"><span>│                  missing │ missing │ missing │ missing │ Animalia │ Chordata ⋯</span></span>
<span class="line"><span>│      (148.241, -36.4001) │    2011 │      11 │      18 │ Animalia │ Chordata ⋯</span></span>
<span class="line"><span>│                  missing │ missing │ missing │ missing │ Animalia │ Chordata ⋯</span></span>
<span class="line"><span>│      (148.236, -36.5249) │    2012 │      11 │      23 │ Animalia │ Chordata ⋯</span></span>
<span class="line"><span>│            ⋮             │    ⋮    │    ⋮    │    ⋮    │    ⋮     │    ⋮     ⋱</span></span>
<span class="line"><span>└──────────────────────────┴─────────┴─────────┴─────────┴──────────┴───────────</span></span>
<span class="line"><span>                                                 78 columns and 285 rows omitted</span></span></code></pre></div><h2 id="Get-Bioclimatic-variables" tabindex="-1">Get Bioclimatic variables <a class="header-anchor" href="#Get-Bioclimatic-variables" aria-label="Permalink to &quot;Get Bioclimatic variables {#Get-Bioclimatic-variables}&quot;">​</a></h2><p>Get BioClim layers and subset to south-east Australia. The first time this is run, this will automatically download and save the files.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">A </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> RasterStack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(WorldClim{BioClim}, (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">7</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">12</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">se_aus </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> A[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">X</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">138</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ..</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 155</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Y</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">40</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ..</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">25</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Band</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)]</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>┌ 101×90 RasterStack ┐</span></span>
<span class="line"><span>├────────────────────┴─────────────────────────────────────────────────── dims ┐</span></span>
<span class="line"><span>  ↓ X Projected{Float64} 138.16666666666666:0.16666666666666666:154.83333333333331 ForwardOrdered Regular Intervals{Start},</span></span>
<span class="line"><span>  → Y Projected{Float64} -25.166666666666668:-0.16666666666666666:-40.0 ReverseOrdered Regular Intervals{Start}</span></span>
<span class="line"><span>├────────────────────────────────────────────────────────────────────── layers ┤</span></span>
<span class="line"><span>  :bio1  eltype: Union{Missing, Float32} dims: X, Y size: 101×90</span></span>
<span class="line"><span>  :bio3  eltype: Union{Missing, Float32} dims: X, Y size: 101×90</span></span>
<span class="line"><span>  :bio7  eltype: Union{Missing, Float32} dims: X, Y size: 101×90</span></span>
<span class="line"><span>  :bio12 eltype: Union{Missing, Float32} dims: X, Y size: 101×90</span></span>
<span class="line"><span>├────────────────────────────────────────────────────────────────────── raster ┤</span></span>
<span class="line"><span>  missingval: missing</span></span>
<span class="line"><span>  extent: Extent(X = (138.16666666666666, 154.99999999999997), Y = (-40.0, -25.0))</span></span>
<span class="line"><span>  crs: GEOGCS[&quot;WGS 84&quot;,DATUM[&quot;WGS_1984&quot;,SPHEROID[&quot;WGS 84&quot;,6378137,298.25722...</span></span>
<span class="line"><span>└──────────────────────────────────────────────────────────────────────────────┘</span></span></code></pre></div><p>Plot BioClim predictors and scatter occurrence points on all subplots</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># The coordinates from the gbif table</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">coords </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> collect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">skipmissing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(records</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">geometry))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CairoMakie</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">p </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Rasters</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rplot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(se_aus);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ax </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">content</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ax </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">isa</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Axis</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        scatter!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ax, coords; alpha</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, marker</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;+&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, color</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:black</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, markersize </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    end</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">p</span></span></code></pre></div><p><img src="`+p+`" alt=""></p><h2 id="Extract-bioclim-variables-at-occurrence-points" tabindex="-1">Extract bioclim variables at occurrence points <a class="header-anchor" href="#Extract-bioclim-variables-at-occurrence-points" aria-label="Permalink to &quot;Extract bioclim variables at occurrence points {#Extract-bioclim-variables-at-occurrence-points}&quot;">​</a></h2><p>Then extract predictor variables and write to CSV. Use the skipmissing keyword to exclude both missing coordinates and coordinates with missing values in the RasterStack.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CSV</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">presences </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> extract</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(se_aus, coords, skipmissing </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">CSV</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">write</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;burramys_parvus_predictors.csv&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, presences)</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&quot;burramys_parvus_predictors.csv&quot;</span></span></code></pre></div><p>Or convert them to a <code>DataFrame</code>:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DataFrames</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> DataFrame</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(presences)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">df[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,:]</span></span></code></pre></div><h2 id="Sample-background-points" tabindex="-1">Sample background points <a class="header-anchor" href="#Sample-background-points" aria-label="Permalink to &quot;Sample background points {#Sample-background-points}&quot;">​</a></h2><p>Next, sample random background points in the Raster. Rasters has a StatsBase extension to make this very straightforward. The syntax and output of <code>Rasters.sample</code> is very similar to that of <code>extract</code>.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> StatsBase</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">background </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Rasters</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">sample</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(se_aus, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">500</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, skipmissing </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>500-element Vector{@NamedTuple{geometry::Tuple{Float64, Float64}, bio1::Float32, bio3::Float32, bio7::Float32, bio12::Float32}}:</span></span>
<span class="line"><span> (geometry = (148.49999999999997, -31.0), bio1 = 18.853552, bio3 = 47.98575, bio7 = 30.556252, bio12 = 545.0)</span></span>
<span class="line"><span> (geometry = (144.83333333333331, -28.666666666666668), bio1 = 21.308022, bio3 = 42.70576, bio7 = 30.040249, bio12 = 315.0)</span></span>
<span class="line"><span> (geometry = (148.66666666666666, -26.0), bio1 = 19.893812, bio3 = 51.225277, bio7 = 30.149502, bio12 = 607.0)</span></span>
<span class="line"><span> (geometry = (143.83333333333331, -38.5), bio1 = 12.83949, bio3 = 46.379555, bio7 = 17.274, bio12 = 930.0)</span></span>
<span class="line"><span> (geometry = (138.33333333333331, -34.833333333333336), bio1 = 16.266474, bio3 = 45.876762, bio7 = 20.304651, bio12 = 439.0)</span></span>
<span class="line"><span> (geometry = (146.99999999999997, -33.833333333333336), bio1 = 16.73198, bio3 = 45.078354, bio7 = 29.120499, bio12 = 494.0)</span></span>
<span class="line"><span> (geometry = (144.66666666666666, -37.333333333333336), bio1 = 12.156489, bio3 = 46.93148, bio7 = 24.10975, bio12 = 826.0)</span></span>
<span class="line"><span> (geometry = (138.33333333333331, -29.5), bio1 = 21.245022, bio3 = 46.238476, bio7 = 32.5145, bio12 = 148.0)</span></span>
<span class="line"><span> (geometry = (148.33333333333331, -29.333333333333332), bio1 = 20.327053, bio3 = 47.11766, bio7 = 30.62975, bio12 = 512.0)</span></span>
<span class="line"><span> (geometry = (141.66666666666666, -32.833333333333336), bio1 = 18.894772, bio3 = 47.978626, bio7 = 29.623, bio12 = 214.0)</span></span>
<span class="line"><span> ⋮</span></span>
<span class="line"><span> (geometry = (143.16666666666666, -31.5), bio1 = 19.753166, bio3 = 46.592964, bio7 = 30.944498, bio12 = 245.0)</span></span>
<span class="line"><span> (geometry = (149.99999999999997, -35.0), bio1 = 13.390448, bio3 = 46.955486, bio7 = 22.9655, bio12 = 816.0)</span></span>
<span class="line"><span> (geometry = (139.66666666666666, -29.833333333333332), bio1 = 20.605042, bio3 = 46.017082, bio7 = 31.531498, bio12 = 114.0)</span></span>
<span class="line"><span> (geometry = (142.33333333333331, -27.0), bio1 = 22.835928, bio3 = 45.43524, bio7 = 33.38575, bio12 = 257.0)</span></span>
<span class="line"><span> (geometry = (142.66666666666666, -38.666666666666664), bio1 = 13.751833, bio3 = 50.762268, bio7 = 18.081999, bio12 = 876.0)</span></span>
<span class="line"><span> (geometry = (150.16666666666666, -27.166666666666668), bio1 = 19.732084, bio3 = 50.16088, bio7 = 28.877998, bio12 = 608.0)</span></span>
<span class="line"><span> (geometry = (145.99999999999997, -35.833333333333336), bio1 = 15.890365, bio3 = 47.147675, bio7 = 29.3715, bio12 = 475.0)</span></span>
<span class="line"><span> (geometry = (149.66666666666666, -26.333333333333332), bio1 = 19.994968, bio3 = 51.07484, bio7 = 28.762, bio12 = 623.0)</span></span>
<span class="line"><span> (geometry = (141.99999999999997, -35.333333333333336), bio1 = 16.306084, bio3 = 49.24588, bio7 = 27.057001, bio12 = 338.0)</span></span></code></pre></div><h2 id="Fit-a-statistical-ensemble" tabindex="-1">Fit a statistical ensemble <a class="header-anchor" href="#Fit-a-statistical-ensemble" aria-label="Permalink to &quot;Fit a statistical ensemble {#Fit-a-statistical-ensemble}&quot;">​</a></h2><p>In this example, we will <a href="https://github.com/tiemvanderdeure/SpeciesDistributionModels.jl" target="_blank" rel="noreferrer">SpeciesDistributionModels.jl</a> to fit a statistical ensemble to the occurrence and background data.</p><p>First we need to load the models. SDM.jl integrates with MLJ - see the <a href="https://juliaai.github.io/MLJ.jl/dev/model_browser/#Classification" target="_blank" rel="noreferrer">model browser</a> for what models are available.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Maxnet</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MaxnetBinaryClassifier</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MLJGLMInterface</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> LinearBinaryClassifier</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># define the models in the ensemble</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">models </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    maxnet </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> MaxnetBinaryClassifier</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    maxnet2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> MaxnetBinaryClassifier</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(features </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;lq&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    glm </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> LinearBinaryClassifier</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>(maxnet = Maxnet.MaxnetBinaryClassifier(&quot;&quot;, 1.0, Maxnet.default_regularization, true, 50, 100.0, GLM.CloglogLink(), false, Base.Pairs{Symbol, Union{}, Tuple{}, @NamedTuple{}}()), maxnet2 = Maxnet.MaxnetBinaryClassifier(&quot;lq&quot;, 1.0, Maxnet.default_regularization, true, 50, 100.0, GLM.CloglogLink(), false, Base.Pairs{Symbol, Union{}, Tuple{}, @NamedTuple{}}()), glm = MLJGLMInterface.LinearBinaryClassifier(true, GLM.LogitLink(), nothing, 30, 1.0e-6, 1.0e-6, 0.001, [:deviance, :dof_residual, :stderror, :vcov, :coef_table]))</span></span></code></pre></div><p>Next, format the data using <code>sdmdata</code>. To test how rigurous our models are, we will use 3-fold cross-validation.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SpeciesDistributionModels</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SDM </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SpeciesDistributionModels</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">data </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> sdmdata</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(presences, background; resampler </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> CV</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; nfolds </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>SDMdata object with 253 presence points and 500 absence points. </span></span>
<span class="line"><span> </span></span>
<span class="line"><span>Resampling: </span></span>
<span class="line"><span>Data is divided into 3 folds using resampling strategy CV(nfolds = 3, …).</span></span>
<span class="line"><span>┌──────┬─────────┬────────┐</span></span>
<span class="line"><span>│ fold │ # train │ # test │</span></span>
<span class="line"><span>├──────┼─────────┼────────┤</span></span>
<span class="line"><span>│    1 │     502 │    251 │</span></span>
<span class="line"><span>│    2 │     502 │    251 │</span></span>
<span class="line"><span>│    3 │     502 │    251 │</span></span>
<span class="line"><span>└──────┴─────────┴────────┘</span></span>
<span class="line"><span>Predictor variables: </span></span>
<span class="line"><span>┌───────┬────────────┬─────────┐</span></span>
<span class="line"><span>│ names │ scitypes   │ types   │</span></span>
<span class="line"><span>├───────┼────────────┼─────────┤</span></span>
<span class="line"><span>│ bio1  │ Continuous │ Float32 │</span></span>
<span class="line"><span>│ bio3  │ Continuous │ Float32 │</span></span>
<span class="line"><span>│ bio7  │ Continuous │ Float32 │</span></span>
<span class="line"><span>│ bio12 │ Continuous │ Float32 │</span></span>
<span class="line"><span>└───────┴────────────┴─────────┘</span></span>
<span class="line"><span>Also contains geometry data</span></span></code></pre></div><p>Now, fit the ensemble, passing the data object and the <code>NamedTuple</code> of models!</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ensemble </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> sdm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(data, models)</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>trained SDMensemble, containing 9 SDMmachines across 3 SDMgroups </span></span>
<span class="line"><span></span></span>
<span class="line"><span>Uses the following models:</span></span>
<span class="line"><span>maxnet =&gt; MaxnetBinaryClassifier. </span></span>
<span class="line"><span>maxnet2 =&gt; MaxnetBinaryClassifier. </span></span>
<span class="line"><span>glm =&gt; LinearBinaryClassifier.</span></span></code></pre></div><p>Use SDM.jl&#39;s evaluate function to see how this ensemble performs.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">SDM</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">evaluate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ensemble)</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>SpeciesDistributionModels.SDMensembleEvaluation with 4 performance measures</span></span>
<span class="line"><span>train</span></span>
<span class="line"><span>┌──────────┬──────────┬──────────┬───────────┬──────────┐</span></span>
<span class="line"><span>│    model │ accuracy │      auc │  log_loss │    kappa │</span></span>
<span class="line"><span>│      Any │  Float64 │  Float64 │   Float64 │  Float64 │</span></span>
<span class="line"><span>├──────────┼──────────┼──────────┼───────────┼──────────┤</span></span>
<span class="line"><span>│   maxnet │ 0.978752 │   0.9972 │  0.196777 │ 0.951705 │</span></span>
<span class="line"><span>│  maxnet2 │ 0.978088 │ 0.995896 │  0.194219 │ 0.950273 │</span></span>
<span class="line"><span>│      glm │ 0.978088 │ 0.996423 │ 0.0734035 │ 0.950145 │</span></span>
<span class="line"><span>│ ensemble │ 0.979416 │ 0.997155 │  0.124895 │ 0.953174 │</span></span>
<span class="line"><span>└──────────┴──────────┴──────────┴───────────┴──────────┘</span></span>
<span class="line"><span>test</span></span>
<span class="line"><span>┌──────────┬──────────┬──────────┬───────────┬──────────┐</span></span>
<span class="line"><span>│    model │ accuracy │      auc │  log_loss │    kappa │</span></span>
<span class="line"><span>│      Any │  Float64 │  Float64 │   Float64 │  Float64 │</span></span>
<span class="line"><span>├──────────┼──────────┼──────────┼───────────┼──────────┤</span></span>
<span class="line"><span>│   maxnet │ 0.978752 │ 0.996204 │  0.211758 │ 0.951212 │</span></span>
<span class="line"><span>│  maxnet2 │ 0.977424 │  0.99505 │  0.198555 │ 0.948233 │</span></span>
<span class="line"><span>│      glm │ 0.976096 │ 0.995301 │ 0.0809701 │ 0.945567 │</span></span>
<span class="line"><span>│ ensemble │ 0.976096 │ 0.996375 │   0.13065 │ 0.945919 │</span></span>
<span class="line"><span>└──────────┴──────────┴──────────┴───────────┴──────────┘</span></span></code></pre></div><p>Not too bad!</p><h2 id="Make-predictions-of-climatic-suitability" tabindex="-1">Make predictions of climatic suitability <a class="header-anchor" href="#Make-predictions-of-climatic-suitability" aria-label="Permalink to &quot;Make predictions of climatic suitability {#Make-predictions-of-climatic-suitability}&quot;">​</a></h2><p>Use the ensemble to</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">suitability </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SDM</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">predict</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ensemble, se_aus, reducer </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mean)</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>┌ 101×90 Raster{Union{Missing, Float64}, 2} ┐</span></span>
<span class="line"><span>├───────────────────────────────────────────┴──────────────────────────── dims ┐</span></span>
<span class="line"><span>  ↓ X Projected{Float64} 138.16666666666666:0.16666666666666666:154.83333333333331 ForwardOrdered Regular Intervals{Start},</span></span>
<span class="line"><span>  → Y Projected{Float64} -25.166666666666668:-0.16666666666666666:-40.0 ReverseOrdered Regular Intervals{Start}</span></span>
<span class="line"><span>├────────────────────────────────────────────────────────────────────── raster ┤</span></span>
<span class="line"><span>  missingval: missing</span></span>
<span class="line"><span>  extent: Extent(X = (138.16666666666666, 154.99999999999997), Y = (-40.0, -25.0))</span></span>
<span class="line"><span>  crs: GEOGCS[&quot;WGS 84&quot;,DATUM[&quot;WGS_1984&quot;,SPHEROID[&quot;WGS 84&quot;,6378137,298.25722...</span></span>
<span class="line"><span>└──────────────────────────────────────────────────────────────────────────────┘</span></span>
<span class="line"><span>   ↓ →    -25.1667      -25.3333      …  -39.6667    -39.8333    -40.0</span></span>
<span class="line"><span> 138.167    4.22754e-6    4.50842e-6        missing     missing     missing</span></span>
<span class="line"><span> 138.333    4.25245e-6    4.57455e-6        missing     missing     missing</span></span>
<span class="line"><span> 138.5      4.71193e-6    5.34401e-6        missing     missing     missing</span></span>
<span class="line"><span> 138.667    5.27812e-6    6.66144e-6        missing     missing     missing</span></span>
<span class="line"><span>   ⋮                                  ⋱                            ⋮</span></span>
<span class="line"><span> 154.167     missing       missing          missing     missing     missing</span></span>
<span class="line"><span> 154.333     missing       missing          missing     missing     missing</span></span>
<span class="line"><span> 154.5       missing       missing          missing     missing     missing</span></span>
<span class="line"><span> 154.667     missing       missing    …     missing     missing     missing</span></span>
<span class="line"><span> 154.833     missing       missing          missing     missing     missing</span></span></code></pre></div><p>And let&#39;s see what that looks like</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">plot</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(suitability, colorrange </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span></code></pre></div><p><img src="`+l+'" alt=""></p>',48)]))}const u=a(t,[["render",h]]);export{E as __pageData,u as default};
